{
    "openapi": "3.0.0",
    "info": {
        "title": "Payunit REST API",
        "description": "Integrating PayUnit REST API with Swagger",
        "version": "1.0.0"
    },
    "paths": {
        "/api/makepayment": {
            "post": {
                "tags": [
                    "payunit"
                ],
                "summary": "make a paymenment",
                "description": "make payments",
                "requestBody": {
                    "description": "pass make payment credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "transaction_id",
                                    "phone_number",
                                    "gateway",
                                    "paymentType"
                                ],
                                "properties": {
                                    "transaction_id": {
                                        "type": "string",
                                        "example": "233333332323234"
                                    },
                                    "gateway": {
                                        "type": "string",
                                        "example": "mtnmomo or orange etc"
                                    },
                                    "phone_number": {
                                        "type": "integer",
                                        "example": "670000000"
                                    },
                                    "paymentType": {
                                        "type": "string",
                                        "example": "button"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": "422"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Unprocessable Entity"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "boolean",
                                            "example": "true"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": "401"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "Unprocessable Entity"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred, please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "boolean",
                                            "example": "false"
                                        },
                                        "status_code": {
                                            "type": "integer",
                                            "example": "200"
                                        },
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment has been successfully made!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearer_token": []
                    }
                ]
            }
        },
        "/api/initialize": {
            "post": {
                "tags": [
                    "payunit"
                ],
                "summary": "Initialize payment",
                "description": "Initialize payment",
                "requestBody": {
                    "description": "Pass initialize  credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "transaction_id",
                                    "total_amount",
                                    "currency",
                                    "return_url"
                                ],
                                "properties": {
                                    "transaction_id": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "123456789101112"
                                    },
                                    "total_amount": {
                                        "type": "integer",
                                        "format": "string",
                                        "example": "2000"
                                    },
                                    "currency": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "XAF"
                                    },
                                    "return_url": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "http://localhost:4000"
                                    },
                                    "name": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "mtn"
                                    },
                                    "description": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "Your description"
                                    },
                                    "purchaseRef": {
                                        "type": "string",
                                        "format": "string",
                                        "example": "any_reference_number"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "422": {
                        "description": "Wrong credentials response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sorry, wrong  transaction_id or total_amount, currency or return_url. Please try again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Initialze"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Initialze": {
                "properties": {
                    "transaction_id": {
                        "description": "This transaction should be unique per request and it should   be a string  This id should be alphanumeric and less than 20 characters",
                        "type": "string"
                    },
                    "total_amount": {
                        "description": "The amount to be paid",
                        "type": "integer"
                    },
                    "currency": {
                        "description": "The currency you want to use: XAF",
                        "type": "string"
                    },
                    "name": {
                        "description": "Name of the merchant",
                        "type": "string"
                    },
                    "description": {
                        "description": "A description you can give to this type of  transaction",
                        "type": "mediumText"
                    }
                },
                "type": "object"
            }
        }
    }
}